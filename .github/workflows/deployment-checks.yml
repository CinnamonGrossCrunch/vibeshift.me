name: Deployment Checks

on:
  pull_request:
    branches: [main, master]
  push:
    branches: [main, master]

jobs:
  lint-and-typecheck:
    name: TypeScript & ESLint Checks
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run TypeScript compiler
        run: npx tsc --noEmit
        continue-on-error: true
        
      - name: Run ESLint
        run: npm run lint
        continue-on-error: true

  build-verification:
    name: Build & API Leakage Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build application
        run: npm run build
        env:
          # Use dummy values for build (not real API keys)
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY || 'sk-dummy-key-for-build' }}
          NEXT_PUBLIC_API_URL: 'http://localhost:3000'
          
      - name: Verify no API leakage
        run: node scripts/verify-no-api-leakage.js
        
      - name: Check build output size
        run: |
          echo "Build output size:"
          du -sh .next
          echo ""
          echo "Detailed breakdown:"
          du -sh .next/*

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          
      - name: Run npm audit
        run: npm audit --audit-level=moderate
        continue-on-error: true
        
      - name: Check for vulnerable dependencies
        run: |
          echo "Checking for critical vulnerabilities..."
          npm audit --audit-level=critical

  deployment-ready:
    name: Deployment Ready
    runs-on: ubuntu-latest
    needs: [lint-and-typecheck, build-verification, security-audit]
    if: always()
    
    steps:
      - name: Check all jobs passed
        run: |
          if [ "${{ needs.lint-and-typecheck.result }}" != "success" ] || \
             [ "${{ needs.build-verification.result }}" != "success" ] || \
             [ "${{ needs.security-audit.result }}" != "success" ]; then
            echo "❌ Some checks failed. Review the logs above."
            exit 1
          else
            echo "✅ All checks passed! Ready to deploy."
          fi
